{"ast":null,"code":"var _jsxFileName = \"/Users/shubhambhardwaj/Practise/Github Desktop/client-management-ui/src/pages/Operations/OpsDashboard/OpsDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { CaseList } from \"../../../components/CaseList/CaseList\";\nimport { BASE_PATH } from \"../../../utils\";\nimport styles from \"./OpsDashboard.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkeletonLoader = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.skeletonWrap,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.skeletonLeft,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.skeletonContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.skeletonCaseInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.skeletonRight,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.skeletonContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.skeletonGrid,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.skeletonCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.skeletonCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.skeletonCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.skeletonCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.skeletonCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.skeletonCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.skeletonCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.skeletonCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = SkeletonLoader;\nconst initialCase = [{\n  caseId: \"NA\",\n  caseCreationDate: \"-\",\n  legalCompanyName: \"-\",\n  productName: \"-\",\n  startDate: \"-\"\n}];\nexport const OpsDashboard = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [allCases, setAllCases] = useState(initialCase);\n  const fetchAllCases = async () => {\n    try {\n      const response = await fetch(`${BASE_PATH}/client-servicing/v1/cases`);\n      if (!response.ok) throw new Error(\"Failed to fetch JSON array\");\n      const data = await response.json();\n      setAllCases(data);\n    } catch (error) {\n      console.error(\"Error fetching Cases\", error);\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      await fetchAllCases();\n      setIsLoading(false);\n    })();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SkeletonLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'url(\"/tw_illustration_133.jpg\") no-repeat center center/cover',\n        height: \"100vh\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\" // Optional fallback color\n      },\n      children: /*#__PURE__*/_jsxDEV(CaseList, {\n        allCases: allCases\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(OpsDashboard, \"y3bewYL2FMAAvZK/OECVwvGickY=\");\n_c2 = OpsDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"SkeletonLoader\");\n$RefreshReg$(_c2, \"OpsDashboard\");","map":{"version":3,"names":["React","useEffect","useState","CaseList","BASE_PATH","styles","jsxDEV","_jsxDEV","SkeletonLoader","className","skeletonWrap","children","skeletonLeft","skeletonContainer","skeletonCaseInfo","fileName","_jsxFileName","lineNumber","columnNumber","skeletonRight","skeletonGrid","skeletonCard","_c","initialCase","caseId","caseCreationDate","legalCompanyName","productName","startDate","OpsDashboard","_s","isLoading","setIsLoading","allCases","setAllCases","fetchAllCases","response","fetch","ok","Error","data","json","error","console","style","background","height","backgroundColor","_c2","$RefreshReg$"],"sources":["/Users/shubhambhardwaj/Practise/Github Desktop/client-management-ui/src/pages/Operations/OpsDashboard/OpsDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { CaseList } from \"../../../components/CaseList/CaseList\";\nimport { BASE_PATH } from \"../../../utils\";\nimport styles from \"./OpsDashboard.module.scss\";\n\nconst SkeletonLoader = () => {\n  return (\n    <div className={styles.skeletonWrap}>\n      <div className={styles.skeletonLeft}>\n        <div className={styles.skeletonContainer}>\n          <div className={styles.skeletonCaseInfo}></div>\n        </div>\n      </div>\n      <div className={styles.skeletonRight}>\n        <div className={styles.skeletonContainer}>\n          <div className={styles.skeletonGrid}>\n            <div className={styles.skeletonCard}></div>\n            <div className={styles.skeletonCard}></div>\n            <div className={styles.skeletonCard}></div>\n            <div className={styles.skeletonCard}></div>\n            <div className={styles.skeletonCard}></div>\n            <div className={styles.skeletonCard}></div>\n            <div className={styles.skeletonCard}></div>\n            <div className={styles.skeletonCard}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst initialCase = [\n  {\n    caseId: \"NA\",\n    caseCreationDate: \"-\",\n    legalCompanyName: \"-\",\n    productName: \"-\",\n    startDate: \"-\",\n  },\n];\n\nexport const OpsDashboard = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [allCases, setAllCases] = useState(initialCase);\n\n  const fetchAllCases = async () => {\n    try {\n      const response = await fetch(`${BASE_PATH}/client-servicing/v1/cases`);\n      if (!response.ok) throw new Error(\"Failed to fetch JSON array\");\n\n      const data = await response.json();\n      setAllCases(data);\n    } catch (error) {\n      console.error(\"Error fetching Cases\", error);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      await fetchAllCases();\n      setIsLoading(false);\n    })();\n  }, []);\n\n  if (isLoading) {\n    return <SkeletonLoader />;\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          background:\n            'url(\"/tw_illustration_133.jpg\") no-repeat center center/cover',\n          height: \"100vh\",\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Optional fallback color\n        }}\n      >\n        <CaseList allCases={allCases} />\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}